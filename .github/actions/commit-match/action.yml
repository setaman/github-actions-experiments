name: "Check Commit Message for patterns"
description: "This action checks latest commit message for specific patters"
inputs:
  patterns:
    description: "list of patterns to check for"
    example: "[skip e2e],[skip]"
    type: string
    required: true
outputs:
  match:
    description: "true if any pattern is found in commit message"
    value: ${{ steps.check_commit.outputs.match }}
  matchedCommit:
    description: "commit message that matched the pattern"
    value: ${{ steps.check_commit.outputs.message }}
runs:
  using: "composite"
  steps:
    - name: Checkout Repository (PR)
      if: github.event_name == 'pull_request'
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Ensures all PR-related commits are fetched
        ref: ${{ github.event.pull_request.head.sha }}  # Checkout only the PR head commit
    - name: Checkout Repository (Push)
      if: github.event_name == 'push'
      uses: actions/checkout@v4
    - name: Get last commit message
      id: get_commit_message
      shell: bash
      run: |
        if [ "$GITHUB_EVENT_NAME" == "pull_request" ]; then
          COMMIT_MESSAGE=$(git log -1 --no-merges ${{ github.event.pull_request.head.sha }} --pretty=format:"%s")
        else
          COMMIT_MESSAGE=$(git log --format=%B -n 1)
        fi
        echo "message<<EOF" >> $GITHUB_ENV
        echo "$COMMIT_MESSAGE" >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV

    - name: Check if commit message contains any keyword
      id: check_commit
      shell: bash
      run: |
        match=false
        matchedCommit=""
        IFS=',' read -ra KEYWORDS <<< "${{ inputs.patterns }}"
        for keyword in "${KEYWORDS[@]}"; do
          echo "Checking '$keyword' against '$message'"
          if [[ $message =~ "$keyword" ]]; then
             match=true
             matchedCommit=$message
             echo "Match found!"
             break
          fi
        done
        echo $match
        echo "match=$match" >> $GITHUB_OUTPUT
        echo "message=$matchedCommit" >> $GITHUB_OUTPUT
